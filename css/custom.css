/**
 * Convert font-size from px to rem with px fallback
 *
 * @param $size - the value in pixels (without px suffix) that you want to convert
 *
 * e.g. p {@include fontSize(12);} 
 *
 */
.skip-link {
  margin: 0; }
  .skip-link a,
  .skip-link a:visited {
    display: block;
    width: 100%;
    padding: 2px 0 3px;
    text-align: center;
    color: #fff; }

.main-content {
  outline: none; }

* {
  box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box; }

html {
  font-size: 100%;
  line-height: 1.5;
  min-height: 100%;
  text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

img,
picture,
object,
figure,
input,
svg {
  max-width: 100%;
  height: auto; }

pre {
  white-space: pre-wrap;
  overflow-x: auto; }

p,
pre {
  margin: 0; }

em,
i {
  font-style: italic; }

blockquote {
  font-style: italic; }

strong,
b {
  font-weight: bold; }

sup {
  font-size: 50%;
  line-height: 0;
  vertical-align: super; }

sub {
  font-size: 50%;
  line-height: 0;
  vertical-align: sub; }

ul.tabs {
  border-bottom: 1px solid #ccc; }

ul.contextual-links li {
  display: block !important;
  float: none !important;
  position: relative !important; }

.contextual-links a {
  color: #000 !important; }
  .contextual-links a:hover {
    color: #000 !important;
    text-decoration: underline !important; }

.menu-item--expanded,
.menu-item--collapsed {
  list-style-type: none;
  list-style-image: none; }

.node--unpublished {
  background-color: #fff4f4; }

.layout-container {
  margin: 2rem 0; }

.container {
  max-width: 68.75em;
  margin: 0 auto; }

.region {
  outline: 1px dotted blue;
  padding: 1rem 0; }

@media (max-width: 68.75em) {
  .container {
    margin: 0 1.25rem; } }

/**
 * @file
 * Print styling
 */
/**
 * By importing this CSS file as media "all", we allow this print file to be
 * aggregated with other stylesheets, for improved front-end performance.
 */
@media print {
  body {
    padding-top: 0 !important;
    color: #000; }
  /* Underline all links. */
  a,
  a:link,
  a:visited {
    color: #000 !important;
    text-decoration: underline !important; }
  main {
    /* Add visible URL after links. */
    /* Only display useful links. */
    /* Add visible title after abbreviations. */ }
    main a[href]:after {
      color: #000 !important;
      content: " (" attr(href) ")" !important; }
    main a[href^="javascript:"]:after,
    main a[href^="#"]:after {
      content: ""; }
    main abbr[title]:after {
      content: " (" attr(title) ")"; }
  /* Turn off any background colors or images. */
  header,
  body,
  #main-content {
    color: #000;
    background-color: transparent !important;
    background-image: none !important; }
  /* Hide sidebars and nav elements. */
  .skip-link,
  #toolbar-administration,
  .toolbar,
  nav,
  footer,
  iframe,
  .trigger,
  .breadcrumb,
  .tabs,
  .pager,
  .feed-icons {
    visibility: hidden;
    display: none; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9tLmNzcyIsInNvdXJjZXMiOlsiY3VzdG9tLnNjc3MiLCJiYXNlL19taXhpbnMuc2NzcyIsImJhc2UvdmFyaWFibGVzL19icmVha3BvaW50cy5zY3NzIiwiYmFzZS92YXJpYWJsZXMvX2NvbG9ycy5zY3NzIiwiYmFzZS92YXJpYWJsZXMvX2RlYnVnZ2luZy5zY3NzIiwiYmFzZS92YXJpYWJsZXMvX2ZvbnRzLnNjc3MiLCJiYXNlL3ZhcmlhYmxlcy9fdW5pdHMuc2NzcyIsImJhc2UvX2FjY2Vzc2liaWxpdHkuc2NzcyIsImJhc2UvX2Jhc2Uuc2NzcyIsImJhc2UvX3R5cG9ncmFwaHkuc2NzcyIsInN0eWxlcy9fYWRtaW4uc2NzcyIsInN0eWxlcy9fbGF5b3V0LnNjc3MiLCJzdHlsZXMvcmVnaW9ucy9faGVhZGVyLnNjc3MiLCJzdHlsZXMvcmVnaW9ucy9fZm9vdGVyLnNjc3MiLCJfcHJpbnQuc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb21waWxlIFNhc3NcblxuXG4vLyBCYXNlIE1peGluc1xuQGltcG9ydCBcImJhc2UvbWl4aW5zXCI7XG5cbi8vIEJhc2UgVmFyaWFibGVzXG5AaW1wb3J0IFwiYmFzZS92YXJpYWJsZXMvYnJlYWtwb2ludHNcIjtcbkBpbXBvcnQgXCJiYXNlL3ZhcmlhYmxlcy9jb2xvcnNcIjtcbkBpbXBvcnQgXCJiYXNlL3ZhcmlhYmxlcy9kZWJ1Z2dpbmdcIjtcbkBpbXBvcnQgXCJiYXNlL3ZhcmlhYmxlcy9mb250c1wiO1xuQGltcG9ydCBcImJhc2UvdmFyaWFibGVzL3VuaXRzXCI7XG5cbi8vIEJhc2UgU3R5bGVzXG5AaW1wb3J0IFwiYmFzZS9hY2Nlc3NpYmlsaXR5XCI7XG5AaW1wb3J0IFwiYmFzZS9iYXNlXCI7XG5AaW1wb3J0IFwiYmFzZS90eXBvZ3JhcGh5XCI7XG5cbi8vIFN0eWxlc1xuQGltcG9ydCBcInN0eWxlcy9hZG1pblwiO1xuQGltcG9ydCBcInN0eWxlcy9sYXlvdXRcIjtcblxuLy8gQ29tcG9uZW50IFN0eWxlc1xuQGltcG9ydCBcInN0eWxlcy9yZWdpb25zL2hlYWRlclwiO1xuQGltcG9ydCBcInN0eWxlcy9yZWdpb25zL2Zvb3RlclwiO1xuXG4vLyBPdGhlclxuQGltcG9ydCBcInByaW50XCI7XG4iLCIvLyBNaXhpbnNcblxuLy8gUHggdG8gRW0gbWl4aW5cbi8vIFVuaXQgbWl4aW5zXG4vLyBFbXMgZm9yIGJyZWFrcG9pbnRzLCB1c2luZyBicm93c2VyIGNvbnRleHQgZm9udCBzaXplXG5AZnVuY3Rpb24gYnAtZW0oJHBpeGVscywgJGNvbnRleHQ6IDE2KSB7XG4gIEByZXR1cm4gI3skcGl4ZWxzLyRjb250ZXh0fWVtO1xufVxuXG4vLyBFbXMgaW4gcmVsYXRpb24gdG8gYmFzZSBmb250IHNpemVcbkBmdW5jdGlvbiBlbSgkcGl4ZWxzLCAkY29udGV4dDogJGJhc2UtZm9udC1zaXplKSB7XG4gIEByZXR1cm4gI3skcGl4ZWxzLyRjb250ZXh0fWVtO1xufVxuXG4vLyBSZW0gY29udmVyc2lvblxuLy8gQ29udmVydCBwaXhlbCB2YWx1ZXMgdG8gcmVtLlxuQGZ1bmN0aW9uIHJlbSgkcHgsICRiYXNlOiAkYmFzZS1mb250LXNpemUpIHtcbiAgQHJldHVybiAoJHB4IC8gJGJhc2UpICogMXJlbTtcbn1cblxuLy8gUmVtIGZvbnQgc2l6ZSBjb252ZXJzaW9uIHcvIHB4IGZhbGxiYWNrc1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3N0dWJib3JuZWxsYS9vb2Nzcy9ibG9iL21hc3Rlci9vb2Nzcy9zcmMvY29tcG9uZW50cy91dGlscy9fZm9udFNpemUuc2Nzc1xuLyoqXG4gKiBDb252ZXJ0IGZvbnQtc2l6ZSBmcm9tIHB4IHRvIHJlbSB3aXRoIHB4IGZhbGxiYWNrXG4gKlxuICogQHBhcmFtICRzaXplIC0gdGhlIHZhbHVlIGluIHBpeGVscyAod2l0aG91dCBweCBzdWZmaXgpIHRoYXQgeW91IHdhbnQgdG8gY29udmVydFxuICpcbiAqIGUuZy4gcCB7QGluY2x1ZGUgZm9udFNpemUoMTIpO30gXG4gKlxuICovXG5cbi8vIEZ1bmN0aW9uIGZvciBjb252ZXJ0aW5nIGEgcHggYmFzZWQgZm9udC1zaXplIHRvIHJlbS5cbkBmdW5jdGlvbiBjYWxjdWxhdGVSZW0oJHNpemUpIHtcbiAgJHJlbVNpemU6ICRzaXplIC8gJGJhc2UtZm9udC1zaXplO1xuICAvL0RlZmF1bHQgZm9udCBzaXplIG9uIGh0bWwgZWxlbWVudCBpcyAxMDAlLCBlcXVpdmFsZW50IHRvIDE2cHg7XG4gIEByZXR1cm4gI3skcmVtU2l6ZX1yZW07XG59XG5cbi8vIE1peGluIHRoYXQgd2lsbCBpbmNsdWRlIHRoZSBmYWxsIGJhY2sgcHggZGVjbGFyYXRpb24gYXMgd2VsbCBhcyB0aGUgY2FsY3VsYXRlZCByZW0gdmFsdWUuXG5AbWl4aW4gZm9udFNpemUoJHNpemUpIHtcbiAgZm9udC1zaXplOiAjeyRzaXplfXB4O1xuICBmb250LXNpemU6IGNhbGN1bGF0ZVJlbSgkc2l6ZSk7XG59XG5cbi8vIFByZWZlcnJlZCB2ZXJzaW9uIG9mIGNsZWFyZml4XG5AbWl4aW4gY2xlYXJmaXgge1xuICAmOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIGNsZWFyOiBib3RoO1xuICB9XG59XG5cbi8vIENlbnRlcnMgYSBibG9jayBsZXZlbCBlbGVtZW50LCByZXF1aXJlcyB3aWR0aFxuQG1peGluIGNlbnRlci1ibG9jayB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xufVxuXG4vLyBWZXJ0aWNhbCBhbGlnbiwgYWxsIGJyb3dzZXJzIGh0dHA6Ly96ZXJvc2l4dGhyZWUuc2UvdmVydGljYWwtYWxpZ24tYW55dGhpbmctd2l0aC1qdXN0LTMtbGluZXMtb2YtY3NzL1xuQG1peGluIHZlcnRpY2FsLWFsaWduKCRwb3NpdGlvbjogcmVsYXRpdmUpIHtcbiAgcG9zaXRpb246ICRwb3NpdGlvbjtcbiAgdG9wOiA1MCU7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG59XG4iLCIvLyBNb2JpbGUtRmlyc3QgQnJlYWtwb2ludHMgLSB1c2VzIGJwLWVtIHRvIGNvbnZlcnQgcGl4ZWxzIHRvIGVtc1xuXG4kbW9iaWxlOiBicC1lbSg2OTcpO1xuJHRhYmxldDogYnAtZW0oNjgwKTtcbiR0YWJsZXQtcGx1czogYnAtZW0oOTYwKTtcbiRkZXNrdG9wOiAgYnAtZW0oMTEwMCk7XG4kZGVza3RvcC1wbHVzOiBicC1lbSgxNDQwKTtcbiRwcmludDogJ3ByaW50JzsiLCIvLyBCYXNlIENvbG9yc1xuXG4kYmxhY2s6ICMwMDA7XG4kd2hpdGU6ICNmZmY7XG4iLCIvLyBEZWJ1Z2dpbmdcblxuJGRlYnVnLWJsdWU6IDFweCBkb3R0ZWQgYmx1ZTtcbiRkZWJ1Zy1ncmVlbjogMXB4IGRvdHRlZCBncmVlbjtcbiRkZWJ1Zy1yZWQ6IDFweCBkb3R0ZWQgcmVkO1xuJGRlYnVnLW9yYW5nZTogMXB4IGRvdHRlZCBvcmFuZ2U7XG4kZGVidWctcHVycGxlOiAxcHggZG90dGVkIHJlYmVjY2FwdXJwbGU7XG5cbiRkZWJ1Zy1zb2xpZHJlZDogMnB4IHNvbGlkIHRvbWF0bztcbiRkZWJ1Zy1zb2xpZHBpbms6IDJweCBzb2xpZCBob3RwaW5rO1xuJGRlYnVnLXNvbGlkb3JhbmdlOiAycHggc29saWQgb3JhbmdlO1xuJGRlYnVnLXNvbGlkeWVsbG93OiAycHggc29saWQgZ29sZDtcbiRkZWJ1Zy1zb2xpZGdyZWVuOiAycHggc29saWQgbGlnaHRncmVlbjtcbiRkZWJ1Zy1zb2xpZGJsdWU6IDJweCBzb2xpZCBkZWVwc2t5Ymx1ZTtcbiRkZWJ1Zy1zb2xpZHB1cnBsZTogMnB4IHNvbGlkIHJlYmVjY2FwdXJwbGU7XG4iLCIvLyBGb250IFN0YWNrcy9TaXplc1xuXG4kYmFzZS1mb250LXNpemU6IDE2OyAvLyBQaXhlbCB2YWx1ZSBvbmx5LCBubyBweCB1bml0XG4kYmFzZS1saW5lLWhlaWdodDogMS41O1xuXG4kdGltZXMtbmV3LXJvbWFuOiBcIlRpbWVzIE5ldyBSb21hblwiLCBUaW1lcywgR2VvcmdpYSwgc2VyaWY7XG4kdGltZXM6ICAgICAgICAgICBUaW1lcywgXCJUaW1lcyBOZXcgUm9tYW5cIiwgR2VvcmdpYSwgc2VyaWY7XG4kZ2VvcmdpYTogICAgICAgICBHZW9yZ2lhLCBcIlRpbWVzIE5ldyBSb21hblwiLCBzZXJpZjtcbiR2ZXJkYW5hOiAgICAgICAgIFZlcmRhbmEsIFRhaG9tYSwgc2Fucy1zZXJpZjtcbiR0YWhvbWE6ICAgICAgICAgIFRhaG9tYSwgVmVyZGFuYSwgc2Fucy1zZXJpZjtcbiRoZWx2ZXRpY2E6ICAgICAgIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XG4kYXJpYWw6ICAgICAgICAgICBBcmlhbCwgSGVsdmV0aWNhLCAgc2Fucy1zZXJpZjtcbiRjb3VyaWVyOiAgICAgICAgIFwiQ291cmllciBOZXdcIiwgbW9ub3NwYWNlLCBzYW5zLXNlcmlmO1xuIiwiLy8gVW5pdHNcblxuLy8gKiogV2hlbiB5b3UgY2FuLi4uXG4vLyAqKiBVc2UgUkVNcyBmb3Igc2l6ZXMgYW5kIHNwYWNpbmcuXG4vLyAqKiBVc2UgRU1zIGZvciBtZWRpYSBxdWVyaWVzLlxuXG4vLyBFbnRlciB2YWx1ZXMgaW4gcGl4ZWxzLCB0aGV5IHdpbGwgYmUgY29udmVydGVkIHRvIGVtcyBvciByZW1zIGF1dG9tYXRpY2FsbHlcbiRtYXgtcGFnZS13aWR0aDogZW0oMTEwMCk7XG5cbi8vIE1hcmdpbnMgLyBHdXR0ZXJzICAtIFJlbXMgYXJlIGlkZWFsIHRvIHVzZSwgYnV0IGRvbid0IGZvcmdldCB0byBhZGQgcHggZmFsbGJhY2sgdmFsdWVzIGZvciBvbGQgYnJvd3NlcnMgaWYgeW91IGRvIVxuJHBhZ2UtbWFyZ2luOiByZW0oMjApO1xuJHBhZ2UtbWFyZ2luLXdpZGU6IHJlbSg0MCk7XG5cbiR2ZXJ0aWNhbC1zcGFjaW5nOiByZW0oMTYpO1xuIiwiLy8gQWNjZXNzaWJpbGl0eSBNaXhpbnNcblxuLy8gTWFrZXMgYW4gZWxlbWVudCB2aXN1YWxseSBoaWRkZW4sIGJ1dCBhY2Nlc3NpYmxlLlxuLy8gQHNlZSBodHRwOi8vc25vb2suY2EvYXJjaGl2ZXMvaHRtbF9hbmRfY3NzL2hpZGluZy1jb250ZW50LWZvci1hY2Nlc3NpYmlsaXR5XG5AbWl4aW4gdmlzdWFsbHktaGlkZGVuIHtcbiAgY2xpcDogcmVjdCgxcHgsIDFweCwgMXB4LCAxcHgpO1xuICBoZWlnaHQ6IDFweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICB3b3JkLXdyYXA6IG5vcm1hbDtcbn1cblxuQG1peGluIHZpc3VhbGx5LWhpZGRlbi1pbXBvcnRhbnQge1xuICBjbGlwOiByZWN0KDFweCwgMXB4LCAxcHgsIDFweCkgIWltcG9ydGFudDtcbiAgaGVpZ2h0OiAxcHggIWltcG9ydGFudDtcbiAgb3ZlcmZsb3c6IGhpZGRlbiAhaW1wb3J0YW50O1xuICBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDtcbiAgd2lkdGg6IDFweCAhaW1wb3J0YW50O1xuICB3b3JkLXdyYXA6IG5vcm1hbCAhaW1wb3J0YW50O1xufVxuXG4vLyBUdXJucyBvZmYgdGhlIHZpc3VhbGx5LWhpZGRlbiBlZmZlY3QuXG5AbWl4aW4gdmlzdWFsbHktaGlkZGVuLW9mZiB7XG4gIGNsaXA6IGF1dG87XG4gIGhlaWdodDogYXV0bztcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIHBvc2l0aW9uOiBzdGF0aWM7XG4gIHdpZHRoOiBhdXRvO1xufVxuXG5AbWl4aW4gdmlzdWFsbHktaGlkZGVuLW9mZi1pbXBvcnRhbnQge1xuICBjbGlwOiBhdXRvICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogYXV0byAhaW1wb3J0YW50O1xuICBvdmVyZmxvdzogdmlzaWJsZSAhaW1wb3J0YW50O1xuICBwb3NpdGlvbjogc3RhdGljICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XG59XG5cbi8vIE1ha2VzIGFuIGVsZW1lbnQgdmlzdWFsbHkgaGlkZGVuIGJ5IGRlZmF1bHQsIGJ1dCB2aXNpYmxlIHdoZW4gZm9jdXNlZC5cbkBtaXhpbiBmb2N1c2FibGUge1xuICBAaW5jbHVkZSB2aXN1YWxseS1oaWRkZW47XG5cbiAgJjphY3RpdmUsXG4gICY6Zm9jdXMge1xuICAgIEBpbmNsdWRlIHZpc3VhbGx5LWhpZGRlbi1vZmY7XG4gIH1cbn1cblxuQG1peGluIGZvY3VzYWJsZS1pbXBvcnRhbnQge1xuICBAaW5jbHVkZSB2aXN1YWxseS1oaWRkZW4taW1wb3J0YW50O1xuXG4gICY6YWN0aXZlLFxuICAmOmZvY3VzIHtcbiAgICBAaW5jbHVkZSB2aXN1YWxseS1oaWRkZW4tb2ZmLWltcG9ydGFudDtcbiAgfVxufVxuXG4vLyBNYWtlcyBhbiBlbGVtZW50IGNvbXBsZXRlbHkgaGlkZGVuLCB2aXN1YWxseSBhbmQgdG8gc2NyZWVuIHJlYWRlcnMuXG5AbWl4aW4gaGlkZGVuIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuQG1peGluIGhpZGRlbi1pbXBvcnRhbnQge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbi8vIE1ha2VzIGFuIGVsZW1lbnQgY29tcGxldGVseSBoaWRkZW4sIHZpc3VhbGx5IGFuZCB0byBzY3JlZW4gcmVhZGVycywgYnV0XG4vLyBtYWludGFpbnMgaXRzIGxheW91dC5cbkBtaXhpbiBpbnZpc2libGUge1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG59XG5cbkBtaXhpbiBpbnZpc2libGUtaW1wb3J0YW50IHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuICFpbXBvcnRhbnQ7XG59XG5cbi8vIFRoZSBza2lwLWxpbmsgbGluayB3aWxsIGJlIGNvbXBsZXRlbHkgaGlkZGVuIHVudGlsIGEgdXNlciB0YWJzIHRvIHRoZSBsaW5rLlxuLnNraXAtbGluayB7XG4gIG1hcmdpbjogMDtcblxuICBhLFxuICBhOnZpc2l0ZWQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDJweCAwIDNweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgY29sb3I6ICR3aGl0ZTtcbiAgfVxufVxuXG4vLyBSZW1vdmluZyBmb2N1cyBmcm9tIGNvbnRlbnQgc28gdGhhdCBza2lwLWxpbmsgZml4IGRvZXMgbm90IGFsd2F5cyBoaWdobGlnaHQgbWFpbiBjb250YWluZXIgd2hlbiBhbnkgY29udGVudCBpcyBjbGlja2VkXG4ubWFpbi1jb250ZW50IHtcbiAgb3V0bGluZTogbm9uZTtcbn1cbiIsIi8vIEJhc2UgSFRNTCBTdHlsZXNcblxuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAtbXMtYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogMTAwJSAqICgkYmFzZS1mb250LXNpemUgLyAxNik7XG4gIGxpbmUtaGVpZ2h0OiAkYmFzZS1saW5lLWhlaWdodDtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG59XG5cbmltZyxcbnBpY3R1cmUsXG5vYmplY3QsXG5maWd1cmUsXG5pbnB1dCxcbnN2ZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuIiwiLy8gQmFzZSBUeXBvZ3JhcGh5IFN0eWxlc1xuXG4vLyBIZWFkZXJzXG5oMSB7XG59XG5cbmgyIHtcbn1cblxuaDMge1xufVxuXG5oNCB7XG59XG5cbmg1IHtcbn1cblxuaDYge1xufVxuXG5wcmUge1xuICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XG4gIG92ZXJmbG93LXg6IGF1dG87XG59XG5cbi8vIE90aGVyXG5wLFxucHJlIHtcbiAgbWFyZ2luOiAwO1xufVxuXG5lbSxcbmkge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbmJsb2NrcXVvdGUge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbnN0cm9uZyxcbmIge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuc3VwIHtcbiAgZm9udC1zaXplOiA1MCU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICB2ZXJ0aWNhbC1hbGlnbjogc3VwZXI7XG59XG5cbnN1YiB7XG4gIGZvbnQtc2l6ZTogNTAlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgdmVydGljYWwtYWxpZ246IHN1Yjtcbn1cbiIsIi8vIFNtYWxsIGFkbWluaXN0cmF0aXZlIGZpeGVzXG5cbi8vIEFkZGluZyB1bmRlcmxpbmUgdW5kZXIgYWRtaW4gbWVudSBpdGVtc1xudWwudGFicyB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjO1xufVxuXG4vLyBGaXhpbmcgY29udGV4dHVhbCBsaW5rIGRyb3Bkb3ducyBpZiBvdmVycmlkZW4gaW4gdGhlbWVcbnVsLmNvbnRleHR1YWwtbGlua3MgbGkge1xuICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xuICBmbG9hdDogbm9uZSAhaW1wb3J0YW50O1xuICBwb3NpdGlvbjogcmVsYXRpdmUgIWltcG9ydGFudDtcbn1cblxuLmNvbnRleHR1YWwtbGlua3MgYSB7XG4gIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG5cbiAgJjpob3ZlciB7XG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSAhaW1wb3J0YW50O1xuICB9XG59XG5cbi8vIFJlbW92aW5nIGRyb3Bkb3duIGFycm93IGZyb20gZXhwYW5kZWQgbWVudSBpdGVtc1xuLm1lbnUtaXRlbS0tZXhwYW5kZWQsXG4ubWVudS1pdGVtLS1jb2xsYXBzZWQge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIGxpc3Qtc3R5bGUtaW1hZ2U6IG5vbmU7XG59XG5cbi8vIEFkZGluZyB2aXNpYmxlIHN0eWxpbmcgdG8gdW5wdWJsaXNoZWQgbm9kZXNcbi5ub2RlLS11bnB1Ymxpc2hlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY0ZjQ7XG59XG4iLCIubGF5b3V0LWNvbnRhaW5lciB7XG5cdG1hcmdpbjogKDIgKiAkdmVydGljYWwtc3BhY2luZykgMDtcbn1cblxuLmNvbnRhaW5lciB7XG5cdG1heC13aWR0aDogJG1heC1wYWdlLXdpZHRoO1xuXHRtYXJnaW46IDAgYXV0bztcblx0Ly8gb3V0bGluZTogJGRlYnVnLW9yYW5nZTtcbn1cblxuLnJlZ2lvbiB7XG5cdG91dGxpbmU6ICRkZWJ1Zy1ibHVlO1xuXHRwYWRkaW5nOiAkdmVydGljYWwtc3BhY2luZyAwO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogJGRlc2t0b3ApIHtcbiAgIC5jb250YWluZXIge1xuICAgXHRcdG1hcmdpbjogMCAkcGFnZS1tYXJnaW47XG4gICB9XG5cbn1cbiIsIi8vIEhlYWRlclxuIiwiLy8gRm9vdGVyXG4iLCIvKipcbiAqIEBmaWxlXG4gKiBQcmludCBzdHlsaW5nXG4gKi9cblxuLyoqXG4gKiBCeSBpbXBvcnRpbmcgdGhpcyBDU1MgZmlsZSBhcyBtZWRpYSBcImFsbFwiLCB3ZSBhbGxvdyB0aGlzIHByaW50IGZpbGUgdG8gYmVcbiAqIGFnZ3JlZ2F0ZWQgd2l0aCBvdGhlciBzdHlsZXNoZWV0cywgZm9yIGltcHJvdmVkIGZyb250LWVuZCBwZXJmb3JtYW5jZS5cbiAqL1xuQG1lZGlhIHByaW50IHtcbiAgYm9keSB7XG4gICAgcGFkZGluZy10b3A6IDAgIWltcG9ydGFudDtcbiAgICBjb2xvcjogIzAwMDtcbiAgfVxuXG4gIC8qIFVuZGVybGluZSBhbGwgbGlua3MuICovXG4gIGEsXG4gIGE6bGluayxcbiAgYTp2aXNpdGVkIHtcbiAgICBjb2xvcjogIzAwMCAhaW1wb3J0YW50O1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lICFpbXBvcnRhbnQ7XG4gIH1cblxuICBtYWluIHtcbiAgICAvKiBBZGQgdmlzaWJsZSBVUkwgYWZ0ZXIgbGlua3MuICovXG4gICAgYVtocmVmXTphZnRlciB7XG4gICAgICBjb2xvcjogIzAwMCAhaW1wb3J0YW50O1xuICAgICAgY29udGVudDogXCIgKFwiIGF0dHIoaHJlZikgXCIpXCIgIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICAvKiBPbmx5IGRpc3BsYXkgdXNlZnVsIGxpbmtzLiAqL1xuICAgIGFbaHJlZl49XCJqYXZhc2NyaXB0OlwiXTphZnRlcixcbiAgICBhW2hyZWZePVwiI1wiXTphZnRlciB7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgIH1cblxuICAgIC8qIEFkZCB2aXNpYmxlIHRpdGxlIGFmdGVyIGFiYnJldmlhdGlvbnMuICovXG4gICAgYWJiclt0aXRsZV06YWZ0ZXIge1xuICAgICAgY29udGVudDogXCIgKFwiIGF0dHIodGl0bGUpIFwiKVwiO1xuICAgIH1cbiAgfVxuXG4gIC8qIFR1cm4gb2ZmIGFueSBiYWNrZ3JvdW5kIGNvbG9ycyBvciBpbWFnZXMuICovXG4gIGhlYWRlcixcbiAgYm9keSxcbiAgI21haW4tY29udGVudCB7XG4gICAgY29sb3I6ICMwMDA7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lICFpbXBvcnRhbnQ7XG4gIH1cblxuICAvKiBIaWRlIHNpZGViYXJzIGFuZCBuYXYgZWxlbWVudHMuICovXG4gIC5za2lwLWxpbmssXG4gICN0b29sYmFyLWFkbWluaXN0cmF0aW9uLFxuICAudG9vbGJhcixcbiAgbmF2LFxuICBmb290ZXIsXG4gIGlmcmFtZSxcbiAgLnRyaWdnZXIsXG4gIC5icmVhZGNydW1iLFxuICAudGFicyxcbiAgLnBhZ2VyLFxuICAuZmVlZC1pY29ucyB7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIGRpc3BsYXk6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 */
